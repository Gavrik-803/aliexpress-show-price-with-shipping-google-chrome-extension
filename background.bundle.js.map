{"version":3,"sources":["webpack:///../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///../node_modules/@babel/runtime/regenerator/index.js","webpack:///./back/routing.js","webpack:///./back/service/refreshToken.js","webpack:///./back/service/requestSender.js","webpack:///./lib/errorHandler.js","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./back/start.js"],"names":["routing","chrome","runtime","onMessage","addListener","request","sender","sendResponse","command","requestSender","then","data","err","errorHandler","refreshToken","Promise","resolve","reject","storage","local","get","result","lastError","error","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","refresh","response","json","responseParsed","code","set","access_token","token","message","url","requestBody","getToken","sendRequest","status_error","refreshTokenResult","stepMain","browserAction","setPopup","popup","console","init"],"mappings":"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CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,KAA0B,oBAAoB,CAAE;AAClD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UC3uBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;;SACegC,I;;;;;gLAAf;AAAA;AAAA;AAAA;AAAA;AACI;AACA;AACAvD,gEAAO;;AAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMAuD,IAAI,G","file":"background.bundle.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","module.exports = require(\"regenerator-runtime\");\n","import errorHandler from '@/lib/errorHandler.js';\r\nimport requestSender from './service/requestSender.js';\r\nfunction routing() {\r\n    chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n        switch (request.command) {\r\n            case 'requestSender': {\r\n                requestSender(request).then((data) => {\r\n                    return sendResponse(data);\r\n                }).catch((err) => {\r\n                    return sendResponse(errorHandler(err));\r\n                });\r\n                return true\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\nexport default routing;","export default function refreshToken() {\r\n    return new Promise(async (resolve, reject) => {\r\n        chrome.storage.local.get(['refreshToken'], async function (result) {\r\n            try {\r\n                if (chrome.runtime.lastError) {\r\n                    return reject({ result: false, error: chrome.runtime.lastError });\r\n                }\r\n                const response = await fetch(`https://panel.sconnect.plus/api/v1.1/refresh`, {\r\n                    method: 'POST',\r\n                    mode: 'cors',\r\n                    cache: 'no-cache',\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    redirect: 'follow',\r\n                    referrerPolicy: 'no-referrer',\r\n                    body: JSON.stringify({ refresh: result.refreshToken }),\r\n                });\r\n                const responseParsed = await response.json();\r\n                if (responseParsed.code === \"SCONNECT_SUCCESS_REFRESHED_TOKEN\") {\r\n                    chrome.storage.local.set({ access_token: responseParsed.access_token }, function () {\r\n                        if (chrome.runtime.lastError) {\r\n                            return reject({ result: false, error: chrome.runtime.lastError });\r\n                        }\r\n                        return resolve({ result: true, token: responseParsed.access_token });\r\n                    });\r\n                } else {\r\n                    return reject({ result: false, error: responseParsed.code });\r\n                }\r\n            } catch (error) {\r\n                return reject({ result: false, error: error.message });\r\n            }\r\n        });\r\n    });\r\n}\r\n","import refreshToken from './refreshToken.js';\r\n/**\r\n * Извлекает токен, прикрепляет к запросу, проверяет жив ли токен, делает запрос.\r\n * @param {*} url - куда кинуть запрос\r\n * @param {*} data - объект с данными которые нужно отправить в body запроса\r\n * @returns {\r\n *  result: {boolean} - результат работы (ошибка или нет)\r\n *  data: {JSONparsed} - ответ сервера\r\n *  error: {string} - если есть ошибка\r\n * }\r\n */\r\nexport default function requestSender({ url, data: requestBody = {} }) {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            if (!url) {\r\n                return reject({ result: false, error: 'url is empty' });\r\n            }\r\n            let {token} = await getToken();\r\n            requestBody.token = token;\r\n            let responseParsed = await sendRequest(url, requestBody);\r\n            if (responseParsed.status_error === 2) {\r\n                // если токен истек\r\n                if (responseParsed.code === 'SCONNECT_BAD_TOKEN') {\r\n                    let refreshTokenResult = await refreshToken();\r\n                    if (refreshTokenResult.result === true && refreshTokenResult.token) {\r\n                        requestBody.token = refreshTokenResult.token;\r\n                        responseParsed = await sendRequest(url, requestBody);\r\n                        if (responseParsed.code === 'SCONNECT_BAD_TOKEN') {\r\n                            chrome.storage.local.set({ stepMain: 2 }, function () {\r\n                                if (chrome.runtime.lastError) {\r\n                                    return reject({ result: false, error: chrome.runtime.lastError });\r\n                                }\r\n                                chrome.browserAction.setPopup({ popup: 'auth.html' });\r\n                                return resolve({ result: false, error: 'show_auth' });\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return resolve(responseParsed);\r\n        } catch (error) {\r\n            return reject({ result: false, error });\r\n        }\r\n    });\r\n}\r\n\r\nfunction getToken() {\r\n    return new Promise(async (resolve, reject) => {\r\n        chrome.storage.local.get(['token'], function (result) {\r\n            if (chrome.runtime.lastError) {\r\n                return reject({ result: false, error: chrome.runtime.lastError });\r\n            }\r\n            return resolve({ token: result.token });\r\n        });\r\n    });\r\n}\r\n\r\nfunction sendRequest(url, requestBody) {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const response = await fetch(`https://panel.sconnect.plus/api/v1.1${url}`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                redirect: 'follow',\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(requestBody),\r\n            });\r\n            const responseParsed = await response.json();\r\n            return resolve(responseParsed);\r\n        } catch (error) {\r\n            return reject({ result: false, error });\r\n        }\r\n    });\r\n}\r\n","/**\r\n * @desc Handles errors in back side\r\n * @param {string} error - error msg\r\n */\r\nexport default function errorHandler(error) {\r\n  console.error(error)\r\n  chrome.browserAction.setPopup({ popup: 'error.html' });\r\n  return {result: false, error: \"show_error\"}\r\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import routing from './routing.js';\r\n/**\r\n * Инициализирует расширение при запуске.\r\n */\r\nasync function init() {\r\n    // подготовка к запуску, например восстановление настроек из storage\r\n    // запуск роутинга после синхронизации настроек\r\n    routing();\r\n}\r\n\r\ninit();"],"sourceRoot":""}